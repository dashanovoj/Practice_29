/* Задача 1. Города и дороги

В галактике "Milky Way" на планете "Neptune" есть N городов, некоторые
из которых соединены дорогами. Император "Maximus" галактики "Milky
Way" решил провести инвентаризацию дорог на планете "Neptune". Но,
как оказалось, он не силен в математике, поэтому он просит вас сосчитать
количество дорог.

Входные данные

В первой строке задается число N (0 ≤ N ≤ 100). В следующих N строках
содержится по N чисел, каждое из которых является единичкой или
ноликом. Причем, если в позиции (i,j) квадратной матрицы стоит
единичка, то i-ый и j-ый города соединены дорогами, а если нолик, то не
соединены.

Выходные данные

Выведите одно число – количество дорог на планете "Neptune". */

import java.util.Scanner;

public class Task1 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Считываем количество городов
        int N = sc.nextInt();

        /* Считываем матрицу смежности
        (способ представления графа в виде квадратной матрицы
        размером n x n, где n — количество вершин в графе) */
        int[][] adjacencyMatrix = new int[N][N];
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                adjacencyMatrix[i][j] = sc.nextInt();
            }
        }

        // Считаем количества дорог
        int roadCount = 0;
        for (int i = 0; i < N; i++) {
            // Проходим только по верхней треугольной части (чтобы избежать двойного подсчёта, так как граф неориентированный)
            for (int j = i + 1; j < N; j++) {
                if (adjacencyMatrix[i][j] == 1) {
                    roadCount++;
                }
            }
        }

        // Выводим количество дорог
        System.out.println(roadCount);
    }
}
